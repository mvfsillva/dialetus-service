Resources:
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ${self:service}-${self:provider.stage}
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      StageName: $self:provider.stage
      TracingEnabled: true
  GatewayResponseDefault400:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: DEFAULT_4XX
      ResponseTemplates:
        application/json: '{"error":{"code":"BadRequestError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseDefault500:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: DEFAULT_5XX
      ResponseTemplates:
        application/json: '{"error":{"code":"InternalServerError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseAccessDeied:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: ACCESS_DENIED
      ResponseTemplates:
        application/json: '{"error":{"code":"AccessDeniedError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseApiConfigurationError:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: API_CONFIGURATION_ERROR
      ResponseTemplates:
        application/json: '{"error":{"code":"ApiConfigurationError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseAuthorizerConfigurationError:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: AUTHORIZER_CONFIGURATION_ERROR
      ResponseTemplates:
        application/json: '{"error":{"code":"AuthorizerConfigurationError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseAuthorizerFailure:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: AUTHORIZER_FAILURE
      ResponseTemplates:
        application/json: '{"error":{"code":"AuthorizerFailureError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseBadRequestBody:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: BAD_REQUEST_BODY
      ResponseTemplates:
        application/json: '{"error":{"code":"BadRequestBodyError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseBadRequestParameters:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: BAD_REQUEST_PARAMETERS
      ResponseTemplates:
        application/json: '{"error":{"code":"BadRequestParametersError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseExpiredToken:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: EXPIRED_TOKEN
      ResponseTemplates:
        application/json: '{"error":{"code":"ExpiredTokenError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseIntegrationFailure:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: INTEGRATION_FAILURE
      ResponseTemplates:
        application/json: '{"error":{"code":"IntegrationFailureError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseIntegrationTimeout:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: INTEGRATION_TIMEOUT
      ResponseTemplates:
        application/json: '{"error":{"code":"IntegrationTimeoutError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseInvalidApiKey:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: INVALID_API_KEY
      ResponseTemplates:
        application/json: '{"error":{"code":"InvalidApiKeyError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseInvalidSignature:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: INVALID_SIGNATURE
      ResponseTemplates:
        application/json: '{"error":{"code":"InvalidSignatureError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseMissingAuthenticationToken:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: MISSING_AUTHENTICATION_TOKEN
      ResponseTemplates:
        application/json: '{"error":{"code":"MissingAuthenticationTokenError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseQuotaExceeded:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: QUOTA_EXCEEDED
      ResponseTemplates:
        application/json: '{"error":{"code":"QuotaExceededError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseRequestTooLarge:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: REQUEST_TOO_LARGE
      ResponseTemplates:
        application/json: '{"error":{"code":"RequestTooLargeError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseResourceNotFound:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: RESOURCE_NOT_FOUND
      ResponseTemplates:
        application/json: '{"error":{"code":"ResourceNotFoundError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseThrottled:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: THROTTLED
      ResponseTemplates:
        application/json: '{"error":{"code":"ThrottledError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseUnauthorized:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: UNAUTHORIZED
      ResponseTemplates:
        application/json: '{"error":{"code":"UnauthorizedError","message":$context.error.messageString},"requestId":"$context.requestId"}'
  GatewayResponseUnauthorizedMediType:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ResponseType: UNSUPPORTED_MEDIA_TYPE
      ResponseTemplates:
        application/json: '{"error":{"code":"UnsupportedMediaYypeError","message":$context.error.messageString},"requestId":"$context.requestId"}'
